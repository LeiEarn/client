<style lang="less">
.task {
  .item {
    height: 150rpx;
    width: 700rpx;
    margin-top: 10rpx;
    background-color: white;
    border: 1rpx solid gray;
    border-radius: 15rpx;
    position: relative;
    
    .icon {
        width: 120rpx;
        height: 120rpx;
        border-radius: 20rpx;
        margin: 15rpx;
    }
    
    .title {
        position: absolute;
        top: 18rpx;
        left: 170rpx;
        font-size: 16pt;
        font-weight: bold;
    }

    .num {
        position: absolute;
        bottom: 18rpx;
        left: 170rpx;
        font-size: 14pt;
    }

    .money {
        position: absolute;
        top: 18rpx;
        right: 30rpx;
        font-size: 16pt;
        color: red;
    }

    .left {
        position: absolute;
        bottom: 18rpx;
        right: 30rpx;
        font-size: 14pt;
    }
  }
}

</style>
<template>
  <view class="task">
    <block wx:for-items="{{ list }}" wx:for-index="index" wx:for-item="item" wx:key="id">
      <view @tap="tap" class="item">
        <image class="icon" src="{{ item.src }}" />
        <text class="title">{{ item.title }}</text>
        <text class="num">{{ item.num }}</text>
        <text class="money">{{ item.money }}</text>
        <text class="left">{{ item.left }}</text>
      </view>
    </block>
  </view>
</template>
<script>
  import wepy from 'wepy'

  export default class Task extends wepy.component {
    props = {
      list: {
        type: Array,
        default: []
      }
    }

    data = {
    }

    events = {
      'index-broadcast': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.name}`)
      }
    }

    methods = {
      tap () {
        // this.num = this.num + 1
        console.log('65465448')
      },
      add () {
        let len = this.list.length
        this.list.push({id: len + 1, title: 'title_' + len})
      }
    }

    onLoad () {
    }

    load(list) {
      this.list = list
      this.$apply()
    }
  }
</script>
