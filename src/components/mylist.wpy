<style lang="less">
  .mylist {
    height: 150rpx;
    width: 700rpx;
    margin-top: 10rpx;
    background-color: white;
    border: 1rpx solid gray;
    border-radius: 10rpx;
    position: relative;
  }

  .icon {
    width: 120rpx;
    height: 120rpx;
    border-radius: 20rpx;
    margin: 15rpx;
  }

  .title {
    position: absolute;
    top: 15rpx;
    left: 170rpx;
    font-size: 16pt;
    font-weight: bold;
  }

  .num {
    position: absolute;
    bottom: 15rpx;
    left: 170rpx;
    font-size: 14pt;
  }

  .money {
    position: absolute;
    top: 15rpx;
    right: 30rpx;
    font-size: 16pt;
    color: red;
  }

  .left {
    position: absolute;
    bottom: 15rpx;
    right: 30rpx;
    font-size: 14pt;
  }
</style>
<template>
  <view class="list">
    <block wx:for-items="{{ list }}" wx:for-index="index" wx:for-item="item" wx:key="id">
      <view @tap="tap" class="mylist">
        <image class="icon" src="{{ item.src }}" />
        <text class="title">{{ item.title }}</text>
        <text class="num">{{ item.num }}</text>
        <text class="money">{{ item.money }}</text>
        <text class="left">{{ item.left }}</text>
      </view>
    </block>
  </view>
</template>
<script>
  import wepy from 'wepy'

  export default class List extends wepy.component {
    data = {
      list: [
        {
          src: '../assets/background.jpg',
          title: 55,
          num: 10,
          money: 0.5,
          left: 33
        },
        {
          src: '../assets/background.jpg',
          title: 'loading',
          num: '10',
          money: '0.5',
          left: 20
        }
      ]
    }

    events = {
      'index-broadcast': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.name}`)
      }
    }

    methods = {
      tap () {
        // this.num = this.num + 1
        console.log('65465448')
      },
      add () {
        let len = this.list.length
        this.list.push({id: len + 1, title: 'title_' + len})
      }
    }

    onLoad () {
    }
  }
</script>
