<style lang="less">
.weui-panel__hd {
  font-size: 12pt;
  color: black;
}
</style>
<template>
	<view class="weui-panel weui-panel_access">
		<view class="weui-panel__hd">已发布的任务</view>
		<view class="issued">
			<issued :list="issued" />
		</view>
	</view>
</template>
<script>
import wepy from 'wepy'
import TaskList from '../../components/tasklist'

export default class PublishedTask extends wepy.page {
  config = {
    navigationBarTitleText: '已发布任务',
    navigationBarTextStyle: 'black',
    navigationBarBackgroundColor: '#E7E8E3',
    enablePullDownRefresh: true,
    backgroundTextStyle: 'dark'
  }

  components = {
    issued: TaskList
  }

  data = {
    userId: null,
    issued: [
      {
        icon: '../../assets/background.jpg',
        title: '标题一',
        desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
        money: 0.5,
        left: 33
      },
      {
        icon: '../../assets/background.jpg',
        title: '标题二',
        desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
        money: 0.5,
        left: 20
      },
      {
        icon: '../../assets/background.jpg',
        title: '标题一',
        desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
        money: 0.5,
        left: 33
      },
      {
        icon: '../../assets/background.jpg',
        title: '标题二',
        desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
        money: 0.5,
        left: 20
      }
    ]
  }

  events = {
  }

  methods = {
  }

  onLoad() {
    if (this.$parent.globalData.userId) {
      this.userId = this.$parent.globalData.userId
      this.getIssuedTask()
    }
  }

  load(list) {
    this.list = list
    this.$apply()
  }

  onPullDownRefresh() {
    console.log('下拉刷新列表')
    setTimeout(function () {
      this.getIssuedTask()
      wepy.stopPullDownRefresh()
    }, 5000)
  }

  getIssuedTask() {
    const rq = require('../../lib/request.js')
    let self = this
    var object = {
      url: '/task/' + this.$parent.globalData.userId + '?type=publishment',
      data: {
      },
      method: 'GET'
    }
    rq.request(object).then(res => {
      self.issued = res.data
      self.$apply()
    }).catch(err => {
      console.log(err)
      this.$parent.reLogin()
    })
  }
}
</script>
