<style lang="less">
@import '../style/iconfont.less';
.index {
  background-color: rgb(245, 245, 245);
}

.weui-search-bar {
  background-color: rgba(0, 0, 0, 0);
  position: absolute;
  top: 0;
  width: 100%;
}

.weui-search-bar__label {
  background-color: rgba(0, 0, 0, 0);
  color: white;
  border: 1rpx solid white;
  border-radius: 50rpx;
  height: 64rpx;
}

.weui-flex__item {
  background-color: white;
  text-align: center;
}

.area {
  margin: 30rpx 20rpx;
}

.placeholder {
  margin: 8rpx 0;
  font-size: 13pt;
}

.recommend {
  margin-top: 20rpx;
}
</style>
<template>
  <view class="container">
    <view class="index">
      <view class="weui-search-bar">
          <view class="weui-search-bar__form">
              <view class="weui-search-bar__label" bindtap="search">
                  <view class="iconfont weui-search-bar__text">&#xe601; 搜索</view>
              </view>
          </view>
      </view>
      <swiperview :SwiperImg.sync="swiperImg" />
      <view class="page__bd page__bd_spacing">
        <view class="weui-flex">
            <view class="weui-flex__item area"><view class="placeholder">简单任务</view></view>
            <view class="weui-flex__item area"><view class="placeholder">调查问卷</view></view>
        </view>
      </view>
      <view class="page__bd page__bd_spacing">
        <view class="weui-flex">
            <view class="weui-flex__item"><view class="placeholder">推荐任务</view></view>
        </view>
      </view>
      <list class="recommend" :list.sync="list" />
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import SwiperView from '../components/swiper'
  import TaskList from '../components/tasklist'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '主页',
      navigationBarTextStyle: 'black',
      navigationBarBackgroundColor: '#E7E8E3'
    }
    components = {
      swiperview: SwiperView,
      list: TaskList
    }

    data = {
      backgroundUrl: '../assets/background.jpg',
      currentTab: 0,
      swiperImg: [
        '../assets/1.png',
        '../assets/2.png',
        '../assets/3.png'
      ],
      list: [
        {
          id: '',
          icon: '../assets/background.jpg',
          title: '标题一',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 33
        },
        {
          icon: '../assets/background.jpg',
          title: '标题二',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 20
        },
        {
          icon: '../assets/background.jpg',
          title: '标题一',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 33
        },
        {
          icon: '../assets/background.jpg',
          title: '标题二',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 20
        },
        {
          icon: '../assets/background.jpg',
          title: '标题一',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 33
        },
        {
          icon: '../assets/background.jpg',
          title: '标题二',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 20
        },
        {
          icon: '../assets/background.jpg',
          title: '标题一',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 33
        },
        {
          icon: '../assets/background.jpg',
          title: '标题二',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 20
        },
        {
          icon: '../assets/background.jpg',
          title: '标题一',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 33
        },
        {
          icon: '../assets/background.jpg',
          title: '标题二',
          desc: '由各种物质组成的巨型球状天体，叫做星球。星球有一定的形状，有自己的运行轨道。',
          money: 0.5,
          left: 20
        }
      ]
    }

    methods = {
      log_in() {
        this.$parent.reLogin()
      },
      search() {
        wepy.navigateTo({ url: './search' })
      }
    }

    events = {
      TapTask(e) {
        wepy.navigateTo({ url: './task/detail?json=' + JSON.stringify(e.task) })
      }
    }

    onLoad() {
    }

    onShow() {
      wepy.getSetting({ success: res => {
        if (!res.authSetting['scope.userInfo']) {
          wepy.navigateTo({ url: './authorize' })
        }
      } })
    }

    onReachBottom() {
    }
  }
</script>
