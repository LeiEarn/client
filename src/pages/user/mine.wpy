<style type="less">
  @import '../../style/iconfont.wxss';
  .mine {
    width: 100%;
    .info {
      background-color: antiquewhite;
      text-align: center;
      height: 500rpx;
      margin-top: 0rpx;
      .head {
        height: 150rpx;
        width: 150rpx;
        margin-top: 150rpx;
        border-radius: 50%;
      }
      .name {
        display: block;
      }
      .modify {
        display: inline-block;
        width: 150rpx;
        color: gray;
        border: 1rpx solid gray;
        border-radius: 30rpx;
      }
      .register {
        display: inline-block;
        width: 150rpx;
        color: gray;
        border: 1rpx solid gray;
        border-radius: 30rpx;
        margin-left: 20rpx;
      }
    }
    .icon {
      margin-right: 5px;
      vertical-align: middle;
      width: 20px;
      height: 20px;
    }
    .balance {
      margin-top: 80rpx;
    }
  }
</style>
<template>
  <view class="mine">
    <view class="info mine_item">
      <block>
        <image class="head" src="{{userInfo.avatarUrl}}" mode="cover" />
        <text class="name">{{userInfo.nickName}}</text>
      </block>
      <button class="weui-btn modify" type="primary" plain="true" size='mini' bindtap="modify" hidden="{{!hasUserInfo}}">修改</button>
    </view>
    <view class="weui-cells">
      <view bindtap="balance" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__hd iconfont icon">&#xe637;</view>
        <view class="weui-cell__bd">账户余额</view>
        <view class="weui-cell__ft weui-cell__ft_in-access">查询余额</view>
      </view>
      <view bindtap="auth" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__hd iconfont icon">&#xe681;</view>
        <view class="weui-cell__bd">身份认证</view>
        <view class="weui-cell__ft weui-cell__ft_in-access"><icon type="success" size="18" hidden="{{hasAuthenticated !== '已认证'}}"></icon>{{hasAuthenticated}}</view>
      </view>
    </view>
    <view class="weui-cells">
      <view bindtap="received" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__hd iconfont icon">&#xe601;</view>
        <view class="weui-cell__bd">已接受任务</view>
        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
      </view>
      <view bindtap="issued" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__hd iconfont icon">&#xe6a4;</view>
        <view class="weui-cell__bd">已发布任务</view>
        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
      </view>
    </view>
    <view class="weui-cells">
      <view bindtap="setting" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__hd iconfont icon">&#xe62d;</view>
        <view class="weui-cell__bd">设置</view>
        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
      </view>
      <view bindtap="about" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__hd iconfont icon">&#xe641;</view>
        <view class="weui-cell__bd">关于</view>
        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  export default class Mine extends wepy.page {
    config = {
      navigationBarTitleText: 'Mine',
      navigationBarTextStyle: 'black',
      navigationBarBackgroundColor: '#E7E8E3'
    }
    components = {}
    data = {
      userInfo: {
        avatarUrl: '../../assets/background.jpg',
        nickName: '狗芙蓉'
      },
      hasUserInfo: false,
      hasAuthenticated: '未认证'
    }
    methods = {
      modify() {
        if (this.hasUserInfo) {
          this.$navigate({
            url: './info'
          })
        }
      },
      balance() {
        if (this.checkState()) {
          wepy.navigateTo({ url: './auth' })
        }
      },
      auth() {
        if (this.checkState()) {
          wepy.navigateTo({ url: './balance' })
        }
      },
      received() {
        if (this.checkState()) {
          wepy.navigateTo({ url: '../task/received' })
        }
      },
      issued() {
        if (this.checkState()) {
          wepy.navigateTo({ url: '../task/issued' })
        }
      },
      setting() {
        // if (this.checkState()) {
        //   wepy.navigateTo({ url: './cancel' })
        // }
        wepy.navigateTo({ url: './setting' })
      },
      about() {
        wepy.navigateTo({ url: '../about' })
      }
    }
  
    async onLoad() {
      await this.getUser()
    }

    onShow() {
      // wepy.getSetting({ success: res => {
      //   console.log(res.authSetting)
      //   if (res.authSetting['scope.userInfo'] === false) {
      //     wepy.navigateTo({ url: '../authorize' })
      //   }
      // } })
    }

    async getUser() {
      let self = this
      if (this.$parent.globalData.userId) {
        console.log(this.$parent.globalData.userId)
        this.userInfo = this.$parent.globalData.userInfo
        this.userId = this.$parent.globalData.userId
        this.hasUserInfo = true
      } else {
        this.$parent.login(function(user) {
          if (user) {
            self.userInfo = user.userInfo
            self.userId = user.userId
            self.hasUserInfo = true
            self.$apply()
          }
        })
      }
    }
  
    checkState() {
      if (this.hasUserInfo === false) {
        wepy.showToast({
          title: '您还未登录', // 提示的内容,
          image: '../../assets/warn.png', // 图标,
          duration: 1000, // 延迟时间,
          mask: true, // 显示透明蒙层，防止触摸穿透,
          success: res => {}
        })
        return false
      } else {
        return true
      }
    }
  }
</script>
