<style lang="less">
  .uploader {
    width: 100%;
    height: 400rpx;
    padding: 10rpx;
    padding-left: 0rpx;
  }

  .weui-btn-area {
    margin-top: 100rpx;
  }
</style>
<template>
  <view class="page">
    <view class="weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">姓名</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入姓名" value="{{user.name}}" bindinput="name" disabled="{{hasAuthenticated}}" />
        </view>
      </view>
      <view class="weui-cell weui-cell_select">
          <view class="weui-cell__hd weui-cell__hd_in-select-after">
              <view class="weui-label">性别</view>
          </view>
          <view class="weui-cell__bd">
              <picker bindchange="bindSexChange" value="{{sexs_index}}" range="{{sexs}}" disabled="{{hasAuthenticated}}">
                  <view class="weui-select weui-select_in-select-after">{{sexs[sexs_index]}}</view>
              </picker>
          </view>
      </view>
      <view class="weui-cell weui-cell_input weui-cell_vcode">
        <view class="weui-cell__hd">
          <view class="weui-label">手机号</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入手机号" value="{{user.tel}}" bindinput="tel" disabled="{{hasAuthenticated}}" />
        </view>
        <view class="weui-cell__ft">
          <view class="weui-vcode-btn">获取验证码</view>
        </view>
      </view>
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">验证码</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入验证码" bindinput="verf" />
        </view>
      </view>
      <view class="weui-cell weui-cell_select">
        <view class="weui-cell__hd weui-cell__hd_in-select-after">
            <view class="weui-label">身份</view>
        </view>
        <view class="weui-cell__bd">
            <picker bindchange="bindIdentityChange" value="{{idens_index}}" range="{{idens}}" disabled="{{hasAuthenticated}}">
                <view class="weui-select weui-select_in-select-after">{{idens[idens_index]}}</view>
            </picker>
        </view>
      </view>
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">{{id_name}}</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入{{id_name}}" value="{{user.id}}" bindinput="id" disabled="{{hasAuthenticated}}" />
        </view>
      </view>
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">证明</view>
        </view>
        <view class="weui-cell__bd">
          <image class="uploader" bindtap="chooseImage" src="{{ cert }}" />
        </view>
      </view>
    </view>
    <view class="weui-btn-area">
      <button class="weui-btn" type="primary" bindtap="submit" disabled="{{hasAuthenticated}}">提交</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class Auth extends wepy.page {
    config = {
      navigationBarTitleText: '身份认证'
    }
    components = {}
    data = {
      sexs: ['男', '女'],
      sexs_index: 0,
      idens: ['学生', '企业人员'],
      idens_index: 0,
      id_name: '学号',
      user: {
        name: '',
        sex: '',
        idenType: '',
        tel: '',
        verf: '',
        id: ''
      },
      cert: '../../assets/background.jpg',
      userId: '',
      hasAuthenticated: false
    }
    methods = {
      name: function(e) {
        this.user.name = e.detail.value
      },
      tel: function(e) {
        this.user.tel = e.detail.value
      },
      verf: function(e) {
        this.user.verf = e.detail.value
      },
      id: function(e) {
        this.user.id = e.detail.value
      },
      bindSexChange: function(e) {
        this.user.sex = this.sexs[e.detail.value]
      },
      bindIdentityChange: function(e) {
        this.user.idenType = this.idens[e.detail.value]
        if (e.detail.value === '0') {
          this.id_name = '学号'
        } else {
          this.id_name = '工号'
        }
      },
      chooseImage: function(e) {
        if (this.hasAuthenticated) {
          return
        }
        var self = this
        wepy.chooseImage({
          count: 1,
          sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: function(res) {
            // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            self.cert = res.tempFilePaths[0]
            self.$apply()
          }
        })
      },
      submit() {
        console.log(this.user)
        let self = this
        wepy.uploadFile({
          url: '/auth', // 开发者服务器 url
          filePath: self.cert, // 要上传文件资源的路径
          name: 'auth', // 文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容
          formData: {
            'idenInfo': JSON.parse(self.user)
          },
          success: res => {
            self.hasAuthenticated = res.data.hasAuthenticated
            self.$parent.hasAuthenticated = res.data.hasAuthenticated
            self.$apply()
          },
          fail: () => {},
          complete: () => {}
        })
      }
    }
    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }
    async onLoad() {
      await this.getUserId()
      if (this.$parent.globalData.hasAuthenticated) {
        const rq = require('../../lib/request.js')
        let self = this
        var object = {
          url: '/auth',
          data: {
            userId: this.userId
          },
          method: 'GET'
        }
        rq.request(object).then(res => {
          self.user = res.data.user
          self.cert = res.data.cert
          self.$apply()
        })
        this.hasAuthenticated = this.$parent.globalData.hasAuthenticated
      }
    }

    async getUserId() {
      if (this.$parent.globalData.userId) {
        this.userId = this.$parent.globalData.userId
      } else {
        let self = this
        this.$parent.getUserId(function(user) {
          if (user) {
            self.userId = user.userId
            self.$apply()
          }
        })
      }
    }
  }
</script>
